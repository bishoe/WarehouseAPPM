/// <reference path="jquery-1.10.2.js" />
var emotions = [];
var emotionsTotal = [];
var mainReactionContainer = "";
var emotionPopupWrapper = "";
var modalBody = "";
var isPopupOpend = false;
var isTapFirstTime = true;

var isMobile = {
    Android: function () {
        return navigator.userAgent.match(/Android/i);
    },
    BlackBerry: function () {
        return navigator.userAgent.match(/BlackBerry/i);
    },
    iOS: function () {
        return navigator.userAgent.match(/iPhone|iPad|iPod/i);
    },
    Opera: function () {
        return navigator.userAgent.match(/Opera Mini/i);
    },
    Windows: function () {
        return navigator.userAgent.match(/IEMobile/i);
    },
    any: function () {
        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
    }
};

document.addEventListener('DOMContentLoaded', function () {
    deferEmotionLoad();
});
function deferEmotionLoad() {
    if (window.jQuery)
        domReadyForEmotion();
    else {
        setTimeout(function () { deferEmotionLoad() }, 100);
    }
}
function domReadyForEmotion() {
 //
  setTimeout(createEmotionCopy, 0);

    jQuery("#btnLikeAnchor").mouseover(function (event) {
        jQuery("#btnLikeAnchor").addClass("like-button");
        event.preventDefault();
    });
    jQuery("#btnLikeAnchor").mouseleave(function (event) {
        jQuery("#emotionsContainer").removeAttr("style");
        event.preventDefault();
    });

}

var groupBy = function (xs, key) {
    return xs.reduce(function (rv, x) {
        (rv[x[key]] = rv[x[key]] || []).push(x);
        return rv;
    }, {});
};

function getContentReactions(contentId, contentType) {
    if (isPopupOpend) { return; }
    isPopupOpend = true;
    //Creating Outer Div
    GenerateReactionContainer();
    //Getting Data
    BindingReactionData(contentId, contentType);
}
function GenerateReactionContainer() {

    mainReactionContainer = document.createElement("div");
    mainReactionContainer.className = "modal fade in";
    mainReactionContainer.style.background = "rgba(0,0,0,0.3)";
    mainReactionContainer.tabIndex = -1;

    var emotionDialog = document.createElement("div");
    emotionDialog.className = "modal-dialog";
    emotionDialog.style.maxWidth = "430px";

    emotionPopupWrapper = document.createElement("div");
    emotionPopupWrapper.className = "modal-content emotion-popup-wrapper";
    emotionPopupWrapper.id = "emotionPopupWrapper";

    emotionDialog.appendChild(emotionPopupWrapper);
    mainReactionContainer.appendChild(emotionDialog);
}
function BindingReactionData(contentId, contentType) {
    jQuery.ajax({
        url: '/WebServices/CommonServices.asmx/GetContentReactions',
        type: 'post',
        data: JSON.stringify({ ContentId: contentId, ContentType: contentType }),
        dataType: 'json',
        contentType: 'application/json',
        beforeSend: function () {
            jQuery("emotion-loader").show();
        },
        success: function (data) {
            emotions = JSON.parse(data.d);
            var x = groupBy(emotions, 'Icon');
            var keys = Object.keys(x);
            emotionsTotal.push({ emotion: 'All', total: emotions.length, EmotionOrder: 0 });
            for (key in Object.keys(x)) {
                emotionsTotal.push({ emotion: keys[key], total: x[keys[key]].length, EmotionOrder: x[keys[key]][0].EmotionOrder });
            }
            generateStructure();
        },
        complete: function () {
            jQuery("emotion-loader").hide();
        }
    });
}
function generateStructure() {
    generateEmotionPopupHeader();
    generateEmotionBody(emotions, "All");
    jQuery("body").append(mainReactionContainer);
    jQuery(mainReactionContainer).modal("show");
    jQuery(mainReactionContainer).bind('hidden.bs.modal', function () {
        emotions = [];
        emotionsTotal = [];
        isPopupOpend = false;
    });
}
function generateEmotionPopupHeader() {
    var modalHeader = document.createElement("div");
    modalHeader.className = "modal-header";
    var closeButton = jQuery("<button type='button' class='close' data-dismiss='modal' aria-label='Close'><span aria-hidden='true' class=''>×</span></button>");
    jQuery(closeButton).on("click", function () {
        jQuery(mainReactionContainer).fadeOut(300, function () {
            jQuery(mainReactionContainer).modal("hide");
            jQuery(mainReactionContainer).remove();
            emotions = [];
            emotionsTotal = [];
            isPopupOpend = false;
        });
    });
    jQuery(modalHeader).append(closeButton);

    var tempEmotionArr = [];
    for (var obj in emotionsTotal) {
        tempEmotionArr.push(emotionsTotal[obj])
    }
    var sortedArr = tempEmotionArr.sort(function (a, b) {
        if (a.EmotionOrder < b.EmotionOrder) return -1;
        if (a.EmotionOrder > b.EmotionOrder) return 1;
        return 0;
    });
    jQuery(emotionPopupWrapper).append(modalHeader);
    //Creating List of emotions
    var ul = document.createElement("ul");
    ul.className = "emotion-popup-header list-unstyled";
    for (index in sortedArr) {
        var spanStyle = "";
        var li = document.createElement("li");
        if (index == 0) {
            li.className = sortedArr[index].emotion + " active";
            li.innerHTML = "All ";
            li.style.cursor = "pointer";
            li.style.color = "#0086dc";
            li.style.fontWeight = "bold";
        }
        else {
            li.className = "emotion-popup-li";
            li.style.position = "relative";
            var iTag = document.createElement("i");
            iTag.className = "d-icon " + sortedArr[index].emotion;
            li.appendChild(iTag);
            spanStyle = "position:absolute;top:2px;left:22px";
        }
        var spanCount = document.createElement("span");
        spanCount.innerHTML = sortedArr[index].total;
        spanCount.setAttribute("style", spanStyle);
        li.appendChild(spanCount);
        li.setAttribute("onclick", "filterEmotionByType('" + sortedArr[index].emotion + "',this)");
        ul.appendChild(li);
    }
    jQuery(modalHeader).append(ul);
    jQuery(emotionPopupWrapper).append("<span class='tab-indicator'></span>");

    modalBody = document.createElement("div");
    modalBody.className = "modal-body emotion-body";
}
function generateEmotionBody(emotionArray, emotionType) {
    var ulEmotionListing = document.createElement("ul");
    ulEmotionListing.className = "emotion-listing list-unstyled";
    for (index in emotionArray) {
        var reaction = emotionArray[index];
        //Starting List
        var liEmotion = document.createElement("li");
        liEmotion.className = "media";

        //Media Left
        var divMediaLeft = document.createElement("div");
        divMediaLeft.className = "media-left media-top";

        //Media body middle
        var divMediaBody = document.createElement("div");
        divMediaBody.className = "media-body media-middle";

        //Media Right
        var divMediaRight = document.createElement("div");
        divMediaRight.className = "media-right";


        //Start: Adding Data to Media Left 
        //anchor of user
        var anchorUserForImage = document.createElement("a");
        anchorUserForImage.href = "/members/" + reaction.unique_user_name;
        anchorUserForImage.className = "emotion-user-link";
        //Adding Image
        var userImage = document.createElement("img");
        userImage.className = "user-image-36";
        userImage.src = reaction.UserImage;
        userImage.alt = htmlEscape(reaction.FullName);

        anchorUserForImage.appendChild(userImage);
        if (emotionType == "All") {
            var spanImageEmotion = document.createElement("span");
            spanImageEmotion.className = "d-icon " + reaction.Icon;
            anchorUserForImage.appendChild(spanImageEmotion);
        }
        divMediaLeft.appendChild(anchorUserForImage);
        //End: Adding Data to Media Left


        //Start: Adding Data to Media Body Middle
        var anchorUser = anchorUserForImage.cloneNode();

        var userNamePara = document.createElement("p");
        userNamePara.className = "title";

        anchorUser.innerHTML = htmlEscape(reaction.FullName);
        anchorUser.className = "text-grey-700";
        userNamePara.appendChild(anchorUser);
        divMediaBody.appendChild(userNamePara);
        //End: Adding Data to Media Body Middle

        //Start: Adding data to media right
        var btnFollow = jQuery((reaction.IsFollowing == 0) ? ("<button class='pill-btn' title='follow' data-authorid='" + reaction.AuthorId + "'><span class='follow-sign'>+&nbsp;</span>Follow</button>") : ((reaction.IsFollowing == 1) ? ("<button class='pill-btn' title='Following' disabled>Following</button>") : ""));
        if (reaction.IsFollowing == 0) {
            btnFollow.on("click", function () {
                followAuthorByUserId(this);
            })
        }
        jQuery(divMediaRight).append(btnFollow);
        //End: Adding data to media right

        liEmotion.appendChild(divMediaLeft);
        liEmotion.appendChild(divMediaBody);
        liEmotion.appendChild(divMediaRight);

        ulEmotionListing.appendChild(liEmotion);
    }
    //Binding body to main container
    jQuery(".emotion-listing").remove();
    isPopupOpend = true;
    jQuery(modalBody).append(ulEmotionListing);
    jQuery(emotionPopupWrapper).append(modalBody);
}
function followAuthorByUserId(btnObject) {
    if (!(typeof jQuery(btnObject).data("isClicked") == "undefined")) {
        if (jQuery(btnObject).data("isClicked") == true) {
            return false;
        }
    }
    jQuery(btnObject).data("isClicked", true);
    var author_id = jQuery(btnObject).data('authorid');
    var contentType = (jQuery("ul[data-content-type]").length > 0) ? jQuery("ul[data-content-type]").data('content-type') : "article";
    jQuery.ajax({
        url: "/Handlers/CsharpCommon.ashx?method=author_follow_unfollow",
        data: { authorId: author_id },
        type: "POST",
        beforeSend: function () {
            //jQuery(btnObject).fadeTo("slow", 0.3);
        },
        success: function (response) {
            if (response == "login") {
                window.location = "/login?ReturnUrl=" + window.location.href;
            }
            else {
                if (parseInt(response) == 1) {
                    jQuery(btnObject).off("click").attr("disabled", "disabled").attr("title","Following").html("Following");
                }
            }
        },
        complete: function () {
            jQuery(btnObject).fadeTo("fast", 1);
        },
    });
    return false;
}
function filterEmotionByType(emotionType, obj) {
    jQuery(".emotion-popup-wrapper .tab-indicator").animate({
        left: (jQuery(obj).position().left + ((emotionType == "All") ? -5 : -2)),
        width: (jQuery(obj).innerWidth() - 10)
    }, 300);
    jQuery(".emotion-popup-header li").removeClass("active");
    jQuery(obj).addClass("active");
    jQuery("ul.emotion-popup-header li").children("span").css("color", "#8d8d8d").css("font-weight", "normal");
    jQuery("ul.emotion-popup-header li.active").children("span").css("color", "#0086dc").css("font-weight", "bold");
    if (emotionType == "All") {
        jQuery(".emotion-popup-wrapper .tab-indicator").css("background-color", "")
        generateEmotionBody(emotions, emotionType);
        jQuery("ul.emotion-popup-header li.active").css("color", "#0086dc").css("font-weight", "bold");
    }
    else {
        jQuery("ul.emotion-popup-header li").css("color", "#8d8d8d").css("font-weight", "normal");
        var emotionArr = [];
        jQuery(emotions).map(function (index, item) {
            if (item.Icon == emotionType) { emotionArr.push(item) }
        });
        generateEmotionBody(emotionArr, emotionType);
    }
}
function htmlEscape(str) {
    return str
        .replace(/&/g, '&amp;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#39;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;');
}
function generateReasonBox(content_id, content_type) {
    mainReactionContainer = jQuery("<div id='reasonPopup' class='modal fade' role='dialog'>\
                              <div class='modal-dialog'>\
                                <div class='modal-content'>\
                                  <div class='modal-header'>\
                                    <button type='button' id='btnReasonPopupClose' class='close' data-dismiss='modal'>&times;</button>\
                                    <h3 class='modal-title text-center h3'>Why do you think so?</h3>\
                                  </div>\
                                  <div class='modal-body'>\
                                    <textarea id='txtBoxReason' placeholder='We would love to hear your feedback' class='form-control' style='width:100%; height:80px;'></textarea>\
                                   </div>\
                                  <div class='modal-footer'>\
                                    <button type='button' class='btn btn-primary' onclick='submitReason(\""+content_id+"\", \""+content_type+"\");'>Submit</button>\
                                  </div>\
                                </div>\
                              </div>\
                            </div>");

    jQuery("body").append(mainReactionContainer);
    jQuery(mainReactionContainer).modal('show');
    jQuery("#btnReasonPopupClose").click(function () {
        jQuery("#reasonPopup").modal("hide").remove();
    });
}
function submitReason(content_id, content_type) {
    var reason = jQuery("#txtBoxReason").val().trim();
    if (reason.length == 0) {
        alert("Please provide reason");
        return false;
    }
    jQuery.ajax({
        url: '/WebServices/CommonServices.asmx/SaveContentFeedback',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ ContentId: content_id, ContentType: content_type.toLowerCase(), Feedback: reason, Title: jQuery("title").html(), Url: window.location.href }),
        success: function (res) {
            var data = res.d;
            if (data != null) {
                if (data.toLowerCase() === "login") {
                    window.location = "/login?ReturnUrl=" + window.location.href;
                }
                else if (data.toLowerCase() == "true") {
                    jQuery(mainReactionContainer).fadeOut(300, function () {
                        jQuery(mainReactionContainer).modal("hide");
                        jQuery(mainReactionContainer).remove();
                    });
                }
                else {
                    alert("Error");
                }
            }
        },
        error: function (err) {
            alert("Error");
        }
    });
    return false;
}
function createEmotionCopy() {
    if (jQuery("#commentsBox").length == 0) {
        setTimeout(createEmotionCopy, 100);
    }

    var likeStatsWithActiveEmotion = jQuery('#TopStatsContainer a#btnLikeAnchor').parent().html();
    jQuery('#BottomEmotionsContainer').html(likeStatsWithActiveEmotion);

    //For Article Only
    if (jQuery('ol#TopStatsContainer').length > 0 && jQuery('#BottomEmotionsContainer').html().indexOf('emotions-wrapper') > 0) {
        //if (jQuery('#BottomEmotionsContainer').html().indexOf('emotions-wrapper') > 0) {
            //Remove invisible elements
            jQuery('ol#TopStatsContainer').remove();
            //Bind ViewCount
            jQuery('#BottomEmotionsContainer').parent().append("<li class='relative' title='Views'><i class='d-icon icon-view'></i> <span class='user-action-count'>" + jQuery('#HiddenContentStats').attr('data-views') + "</span></li>");
        }
    }


//function createEmotionCopy() {
//    if (jQuery("#commentsBox").length == 0) {
//        setTimeout(createEmotionCopy, 100);
//    }
//    var bottomEmotionContainer = jQuery('<div class="contentHeaderArticleIcons content-footer emotion-bottom"></div>');
//    var ul = jQuery("<ul class='viewBar'></ul>");
//    var li = jQuery(".contentHeaderArticleIcons ul>li:first").clone(true);

//    jQuery(bottomEmotionContainer).append(ul);
//    jQuery(ul).append(li);
//    jQuery(bottomEmotionContainer).insertBefore("#commentsBox");
//    jQuery("div.emotion-bottom ul.viewBar li a span#spanEmotionPopup").mouseover(function (event) {
//        jQuery(".emotions-container").attr("style", "display:none;");
//        event.preventDefault();
//    });
//    jQuery("div.emotion-bottom ul.viewBar li a span#spanEmotionPopup").mouseleave(function (event) {
//        jQuery(".emotions-container").removeAttr("style");
//        event.preventDefault();
//    });
//}