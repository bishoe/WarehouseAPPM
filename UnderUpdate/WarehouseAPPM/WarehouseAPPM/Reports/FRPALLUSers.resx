<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnSave.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        a1+n914m9wAAAABJRU5ErkJggg==
</value>
  </data>
</root>